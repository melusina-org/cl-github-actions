name: 'Continuous Integration'
on:
  workflow_dispatch:
  push:
    branches-ignore:
      - v1
    tags-ignore:
      - v1.*
jobs:
  continuous-integration:
    name: 'Lisp Continuous Integration'
    uses: melusina-org/reusable/.github/workflows/lisp-continuous-integration.yaml@v1
    needs: component-tests

  component-tests:
    strategy:
      matrix:
        implementation: ['abcl', 'sbcl']
        os: ['ubuntu-latest', 'macos-11', 'macos-12', 'macos-13']
        exclude:
          - os: 'ubuntu-latest'
            implementation: 'abcl'
    runs-on: '${{ matrix.os }}'
    name: 'Component Tests'
    steps:
      - uses: actions/checkout@v3
      - name: 'Install MacPorts'
        if: runner.os == 'macOS'
        uses: melusina-org/setup-macports@v1
      - uses: melusina-org/setup-common-lisp@v1
        with:
          implementation: '${{ matrix.implementation }}'
      - uses: melusina-org/setup-quicklisp@v1
        with:
          implementation: '${{ matrix.implementation }}'
      - name: 'Run a failing program'
        id: failing-program
        continue-on-error: true
        shell: sh
        run: |
          ${{ github.workspace }}/libexec/with_lisp_implementation '${{ matrix.implementation }}' <<EOF
          (uiop:quit 1)
          EOF
      - name: 'Ensure a failing program yields failure'
        shell: sh
        run: |
          test '${{ steps.failing-program.outcome }}' = 'failure'
      - name: 'Run a missing system'
        id: missing-system
        continue-on-error: true
        shell: sh
        run: |
          ${{ github.workspace }}/libexec/with_lisp_implementation '${{ matrix.implementation }}' <<EOF
          (org.melusina.non-existent:non-existent)
          EOF
      - name: 'Ensure a missing system yields failure'
        shell: sh
        run: |
          test '${{ steps.missing-system.outcome }}' = 'failure'
      - name: 'Run a successful program'
        id: successful-program
        continue-on-error: true
        shell: sh
        run: |
          ${{ github.workspace }}/libexec/with_lisp_implementation '${{ matrix.implementation }}' <<EOF
          (uiop:quit)
          EOF
      - name: 'Ensure a successful program yields success'
        shell: sh
        run: |
          test '${{ steps.successful-program.outcome }}' = 'success'
      - name: 'Run a program that sets debug'
        id: set-debug
        continue-on-error: true
        uses: melusina-org/run-common-lisp-program@v1
        with:
          implementation: '${{ matrix.implementation }}'
          system: 'org.melusina.github-actions/testsuite'
          entrypoint: 'component-tests/set-debug'
      - name: 'Run a program that sets a notice'
        id: set-notice
        continue-on-error: true
        uses: melusina-org/run-common-lisp-program@v1
        with:
          implementation: '${{ matrix.implementation }}'
          system: 'org.melusina.github-actions/testsuite'
          entrypoint: 'component-tests/set-notice'
